/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import dev.insurtech.api.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for Attributes9 type.
 */
public class Attributes9 {
    private String limit;
    private String deductible;
    private PolicyState2Enum policyState;
    private LocalDateTime effectiveDate;
    private LocalDateTime termEndDate;
    private String externalReference;
    private Object metadata;
    private LocalDateTime bindableOn;
    private String termPremium;
    private LocalDateTime validUntil;
    private LocalDateTime convertableOn;
    private LocalDateTime convertedOn;
    private Status2Enum status;
    private Map<String, Object> installmentPlans;
    private String minPremium;
    private String stateTax;
    private String stateFees;
    private String serviceFees;
    private String billingFees;

    /**
     * Default constructor.
     */
    public Attributes9() {
    }

    /**
     * Initialization constructor.
     * @param  policyState  PolicyState2Enum value for policyState.
     * @param  effectiveDate  LocalDateTime value for effectiveDate.
     * @param  termEndDate  LocalDateTime value for termEndDate.
     * @param  limit  String value for limit.
     * @param  deductible  String value for deductible.
     * @param  externalReference  String value for externalReference.
     * @param  metadata  Object value for metadata.
     * @param  bindableOn  LocalDateTime value for bindableOn.
     * @param  termPremium  String value for termPremium.
     * @param  validUntil  LocalDateTime value for validUntil.
     * @param  convertableOn  LocalDateTime value for convertableOn.
     * @param  convertedOn  LocalDateTime value for convertedOn.
     * @param  status  Status2Enum value for status.
     * @param  installmentPlans  Map of String, value for installmentPlans.
     * @param  minPremium  String value for minPremium.
     * @param  stateTax  String value for stateTax.
     * @param  stateFees  String value for stateFees.
     * @param  serviceFees  String value for serviceFees.
     * @param  billingFees  String value for billingFees.
     */
    public Attributes9(
            PolicyState2Enum policyState,
            LocalDateTime effectiveDate,
            LocalDateTime termEndDate,
            String limit,
            String deductible,
            String externalReference,
            Object metadata,
            LocalDateTime bindableOn,
            String termPremium,
            LocalDateTime validUntil,
            LocalDateTime convertableOn,
            LocalDateTime convertedOn,
            Status2Enum status,
            Map<String, Object> installmentPlans,
            String minPremium,
            String stateTax,
            String stateFees,
            String serviceFees,
            String billingFees) {
        this.limit = limit;
        this.deductible = deductible;
        this.policyState = policyState;
        this.effectiveDate = effectiveDate;
        this.termEndDate = termEndDate;
        this.externalReference = externalReference;
        this.metadata = metadata;
        this.bindableOn = bindableOn;
        this.termPremium = termPremium;
        this.validUntil = validUntil;
        this.convertableOn = convertableOn;
        this.convertedOn = convertedOn;
        this.status = status;
        this.installmentPlans = installmentPlans;
        this.minPremium = minPremium;
        this.stateTax = stateTax;
        this.stateFees = stateFees;
        this.serviceFees = serviceFees;
        this.billingFees = billingFees;
    }

    /**
     * Getter for Limit.
     * A value from the set denoting the user-selected limit of coverage. This is dependent on the
     * product's configuration.
     * @return Returns the String
     */
    @JsonGetter("limit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLimit() {
        return limit;
    }

    /**
     * Setter for Limit.
     * A value from the set denoting the user-selected limit of coverage. This is dependent on the
     * product's configuration.
     * @param limit Value for String
     */
    @JsonSetter("limit")
    public void setLimit(String limit) {
        this.limit = limit;
    }

    /**
     * Getter for Deductible.
     * A value from the set denoting the user-selected deductible of coverage. This is dependent on
     * the product's configuration.
     * @return Returns the String
     */
    @JsonGetter("deductible")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeductible() {
        return deductible;
    }

    /**
     * Setter for Deductible.
     * A value from the set denoting the user-selected deductible of coverage. This is dependent on
     * the product's configuration.
     * @param deductible Value for String
     */
    @JsonSetter("deductible")
    public void setDeductible(String deductible) {
        this.deductible = deductible;
    }

    /**
     * Getter for PolicyState.
     * The two letter state code (including Washington DC).
     * @return Returns the PolicyState2Enum
     */
    @JsonGetter("policy_state")
    public PolicyState2Enum getPolicyState() {
        return policyState;
    }

    /**
     * Setter for PolicyState.
     * The two letter state code (including Washington DC).
     * @param policyState Value for PolicyState2Enum
     */
    @JsonSetter("policy_state")
    public void setPolicyState(PolicyState2Enum policyState) {
        this.policyState = policyState;
    }

    /**
     * Getter for EffectiveDate.
     * Effective date for when the resulting policy would go into effective should it be generated.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("effective_date")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Setter for EffectiveDate.
     * Effective date for when the resulting policy would go into effective should it be generated.
     * @param effectiveDate Value for LocalDateTime
     */
    @JsonSetter("effective_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setEffectiveDate(LocalDateTime effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    /**
     * Getter for TermEndDate.
     * The desired end date for the policy that results from this quote. The span from
     * effective_date to this term_end_date must be allowable by the product's terms.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("term_end_date")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getTermEndDate() {
        return termEndDate;
    }

    /**
     * Setter for TermEndDate.
     * The desired end date for the policy that results from this quote. The span from
     * effective_date to this term_end_date must be allowable by the product's terms.
     * @param termEndDate Value for LocalDateTime
     */
    @JsonSetter("term_end_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTermEndDate(LocalDateTime termEndDate) {
        this.termEndDate = termEndDate;
    }

    /**
     * Getter for ExternalReference.
     * Any value you wish to associate with this policy such as an ID from your system.
     * @return Returns the String
     */
    @JsonGetter("external_reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExternalReference() {
        return externalReference;
    }

    /**
     * Setter for ExternalReference.
     * Any value you wish to associate with this policy such as an ID from your system.
     * @param externalReference Value for String
     */
    @JsonSetter("external_reference")
    public void setExternalReference(String externalReference) {
        this.externalReference = externalReference;
    }

    /**
     * Getter for Metadata.
     * Additional data about the policy. The required metadata fields are specific to the product.
     * @return Returns the Object
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Additional data about the policy. The required metadata fields are specific to the product.
     * @param metadata Value for Object
     */
    @JsonSetter("metadata")
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for BindableOn.
     * The date this quote was rated and set to bindable.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("bindable_on")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getBindableOn() {
        return bindableOn;
    }

    /**
     * Setter for BindableOn.
     * The date this quote was rated and set to bindable.
     * @param bindableOn Value for LocalDateTime
     */
    @JsonSetter("bindable_on")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setBindableOn(LocalDateTime bindableOn) {
        this.bindableOn = bindableOn;
    }

    /**
     * Getter for TermPremium.
     * Boost generated term premium for this quote.
     * @return Returns the String
     */
    @JsonGetter("term_premium")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTermPremium() {
        return termPremium;
    }

    /**
     * Setter for TermPremium.
     * Boost generated term premium for this quote.
     * @param termPremium Value for String
     */
    @JsonSetter("term_premium")
    public void setTermPremium(String termPremium) {
        this.termPremium = termPremium;
    }

    /**
     * Getter for ValidUntil.
     * The date this quote is valid until after which point a new quote will need to be generated.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("valid_until")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getValidUntil() {
        return validUntil;
    }

    /**
     * Setter for ValidUntil.
     * The date this quote is valid until after which point a new quote will need to be generated.
     * @param validUntil Value for LocalDateTime
     */
    @JsonSetter("valid_until")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setValidUntil(LocalDateTime validUntil) {
        this.validUntil = validUntil;
    }

    /**
     * Getter for ConvertableOn.
     * The date this quote satisfied all its dependencies to become a policy.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("convertable_on")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getConvertableOn() {
        return convertableOn;
    }

    /**
     * Setter for ConvertableOn.
     * The date this quote satisfied all its dependencies to become a policy.
     * @param convertableOn Value for LocalDateTime
     */
    @JsonSetter("convertable_on")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setConvertableOn(LocalDateTime convertableOn) {
        this.convertableOn = convertableOn;
    }

    /**
     * Getter for ConvertedOn.
     * The date this quote was converted into a policy.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("converted_on")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getConvertedOn() {
        return convertedOn;
    }

    /**
     * Setter for ConvertedOn.
     * The date this quote was converted into a policy.
     * @param convertedOn Value for LocalDateTime
     */
    @JsonSetter("converted_on")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setConvertedOn(LocalDateTime convertedOn) {
        this.convertedOn = convertedOn;
    }

    /**
     * Getter for Status.
     * The status of the quote.
     * @return Returns the Status2Enum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Status2Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * The status of the quote.
     * @param status Value for Status2Enum
     */
    @JsonSetter("status")
    public void setStatus(Status2Enum status) {
        this.status = status;
    }

    /**
     * Getter for InstallmentPlans.
     * Payment installment plans that are available for this quote
     * @return Returns the Map of String, Object
     */
    @JsonGetter("installment_plans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, Object> getInstallmentPlans() {
        return installmentPlans;
    }

    /**
     * Setter for InstallmentPlans.
     * Payment installment plans that are available for this quote
     * @param installmentPlans Value for Map of String, Object
     */
    @JsonSetter("installment_plans")
    public void setInstallmentPlans(Map<String, Object> installmentPlans) {
        this.installmentPlans = installmentPlans;
    }

    /**
     * Getter for MinPremium.
     * Boost generated minimum premium for this product.
     * @return Returns the String
     */
    @JsonGetter("min_premium")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMinPremium() {
        return minPremium;
    }

    /**
     * Setter for MinPremium.
     * Boost generated minimum premium for this product.
     * @param minPremium Value for String
     */
    @JsonSetter("min_premium")
    public void setMinPremium(String minPremium) {
        this.minPremium = minPremium;
    }

    /**
     * Getter for StateTax.
     * Any state taxes that apply to this quote.
     * @return Returns the String
     */
    @JsonGetter("state_tax")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStateTax() {
        return stateTax;
    }

    /**
     * Setter for StateTax.
     * Any state taxes that apply to this quote.
     * @param stateTax Value for String
     */
    @JsonSetter("state_tax")
    public void setStateTax(String stateTax) {
        this.stateTax = stateTax;
    }

    /**
     * Getter for StateFees.
     * Any state fees that apply to this quote.
     * @return Returns the String
     */
    @JsonGetter("state_fees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStateFees() {
        return stateFees;
    }

    /**
     * Setter for StateFees.
     * Any state fees that apply to this quote.
     * @param stateFees Value for String
     */
    @JsonSetter("state_fees")
    public void setStateFees(String stateFees) {
        this.stateFees = stateFees;
    }

    /**
     * Getter for ServiceFees.
     * Any service fees that apply to this quote.
     * @return Returns the String
     */
    @JsonGetter("service_fees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getServiceFees() {
        return serviceFees;
    }

    /**
     * Setter for ServiceFees.
     * Any service fees that apply to this quote.
     * @param serviceFees Value for String
     */
    @JsonSetter("service_fees")
    public void setServiceFees(String serviceFees) {
        this.serviceFees = serviceFees;
    }

    /**
     * Getter for BillingFees.
     * Any billing fees that apply to this quote.
     * @return Returns the String
     */
    @JsonGetter("billing_fees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingFees() {
        return billingFees;
    }

    /**
     * Setter for BillingFees.
     * Any billing fees that apply to this quote.
     * @param billingFees Value for String
     */
    @JsonSetter("billing_fees")
    public void setBillingFees(String billingFees) {
        this.billingFees = billingFees;
    }

    /**
     * Converts this Attributes9 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Attributes9 [" + "policyState=" + policyState + ", effectiveDate=" + effectiveDate
                + ", termEndDate=" + termEndDate + ", limit=" + limit + ", deductible=" + deductible
                + ", externalReference=" + externalReference + ", metadata=" + metadata
                + ", bindableOn=" + bindableOn + ", termPremium=" + termPremium + ", validUntil="
                + validUntil + ", convertableOn=" + convertableOn + ", convertedOn=" + convertedOn
                + ", status=" + status + ", installmentPlans=" + installmentPlans + ", minPremium="
                + minPremium + ", stateTax=" + stateTax + ", stateFees=" + stateFees
                + ", serviceFees=" + serviceFees + ", billingFees=" + billingFees + "]";
    }

    /**
     * Builds a new {@link Attributes9.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Attributes9.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(policyState, effectiveDate, termEndDate)
                .limit(getLimit())
                .deductible(getDeductible())
                .externalReference(getExternalReference())
                .metadata(getMetadata())
                .bindableOn(getBindableOn())
                .termPremium(getTermPremium())
                .validUntil(getValidUntil())
                .convertableOn(getConvertableOn())
                .convertedOn(getConvertedOn())
                .status(getStatus())
                .installmentPlans(getInstallmentPlans())
                .minPremium(getMinPremium())
                .stateTax(getStateTax())
                .stateFees(getStateFees())
                .serviceFees(getServiceFees())
                .billingFees(getBillingFees());
        return builder;
    }

    /**
     * Class to build instances of {@link Attributes9}.
     */
    public static class Builder {
        private PolicyState2Enum policyState;
        private LocalDateTime effectiveDate;
        private LocalDateTime termEndDate;
        private String limit;
        private String deductible;
        private String externalReference;
        private Object metadata;
        private LocalDateTime bindableOn;
        private String termPremium;
        private LocalDateTime validUntil;
        private LocalDateTime convertableOn;
        private LocalDateTime convertedOn;
        private Status2Enum status;
        private Map<String, Object> installmentPlans;
        private String minPremium;
        private String stateTax;
        private String stateFees;
        private String serviceFees;
        private String billingFees;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  policyState  PolicyState2Enum value for policyState.
         * @param  effectiveDate  LocalDateTime value for effectiveDate.
         * @param  termEndDate  LocalDateTime value for termEndDate.
         */
        public Builder(PolicyState2Enum policyState, LocalDateTime effectiveDate,
                LocalDateTime termEndDate) {
            this.policyState = policyState;
            this.effectiveDate = effectiveDate;
            this.termEndDate = termEndDate;
        }

        /**
         * Setter for policyState.
         * @param  policyState  PolicyState2Enum value for policyState.
         * @return Builder
         */
        public Builder policyState(PolicyState2Enum policyState) {
            this.policyState = policyState;
            return this;
        }

        /**
         * Setter for effectiveDate.
         * @param  effectiveDate  LocalDateTime value for effectiveDate.
         * @return Builder
         */
        public Builder effectiveDate(LocalDateTime effectiveDate) {
            this.effectiveDate = effectiveDate;
            return this;
        }

        /**
         * Setter for termEndDate.
         * @param  termEndDate  LocalDateTime value for termEndDate.
         * @return Builder
         */
        public Builder termEndDate(LocalDateTime termEndDate) {
            this.termEndDate = termEndDate;
            return this;
        }

        /**
         * Setter for limit.
         * @param  limit  String value for limit.
         * @return Builder
         */
        public Builder limit(String limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Setter for deductible.
         * @param  deductible  String value for deductible.
         * @return Builder
         */
        public Builder deductible(String deductible) {
            this.deductible = deductible;
            return this;
        }

        /**
         * Setter for externalReference.
         * @param  externalReference  String value for externalReference.
         * @return Builder
         */
        public Builder externalReference(String externalReference) {
            this.externalReference = externalReference;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Object value for metadata.
         * @return Builder
         */
        public Builder metadata(Object metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for bindableOn.
         * @param  bindableOn  LocalDateTime value for bindableOn.
         * @return Builder
         */
        public Builder bindableOn(LocalDateTime bindableOn) {
            this.bindableOn = bindableOn;
            return this;
        }

        /**
         * Setter for termPremium.
         * @param  termPremium  String value for termPremium.
         * @return Builder
         */
        public Builder termPremium(String termPremium) {
            this.termPremium = termPremium;
            return this;
        }

        /**
         * Setter for validUntil.
         * @param  validUntil  LocalDateTime value for validUntil.
         * @return Builder
         */
        public Builder validUntil(LocalDateTime validUntil) {
            this.validUntil = validUntil;
            return this;
        }

        /**
         * Setter for convertableOn.
         * @param  convertableOn  LocalDateTime value for convertableOn.
         * @return Builder
         */
        public Builder convertableOn(LocalDateTime convertableOn) {
            this.convertableOn = convertableOn;
            return this;
        }

        /**
         * Setter for convertedOn.
         * @param  convertedOn  LocalDateTime value for convertedOn.
         * @return Builder
         */
        public Builder convertedOn(LocalDateTime convertedOn) {
            this.convertedOn = convertedOn;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Status2Enum value for status.
         * @return Builder
         */
        public Builder status(Status2Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for installmentPlans.
         * @param  installmentPlans  Map of String, value for installmentPlans.
         * @return Builder
         */
        public Builder installmentPlans(Map<String, Object> installmentPlans) {
            this.installmentPlans = installmentPlans;
            return this;
        }

        /**
         * Setter for minPremium.
         * @param  minPremium  String value for minPremium.
         * @return Builder
         */
        public Builder minPremium(String minPremium) {
            this.minPremium = minPremium;
            return this;
        }

        /**
         * Setter for stateTax.
         * @param  stateTax  String value for stateTax.
         * @return Builder
         */
        public Builder stateTax(String stateTax) {
            this.stateTax = stateTax;
            return this;
        }

        /**
         * Setter for stateFees.
         * @param  stateFees  String value for stateFees.
         * @return Builder
         */
        public Builder stateFees(String stateFees) {
            this.stateFees = stateFees;
            return this;
        }

        /**
         * Setter for serviceFees.
         * @param  serviceFees  String value for serviceFees.
         * @return Builder
         */
        public Builder serviceFees(String serviceFees) {
            this.serviceFees = serviceFees;
            return this;
        }

        /**
         * Setter for billingFees.
         * @param  billingFees  String value for billingFees.
         * @return Builder
         */
        public Builder billingFees(String billingFees) {
            this.billingFees = billingFees;
            return this;
        }

        /**
         * Builds a new {@link Attributes9} object using the set fields.
         * @return {@link Attributes9}
         */
        public Attributes9 build() {
            return new Attributes9(policyState, effectiveDate, termEndDate, limit, deductible,
                    externalReference, metadata, bindableOn, termPremium, validUntil, convertableOn,
                    convertedOn, status, installmentPlans, minPremium, stateTax, stateFees,
                    serviceFees, billingFees);
        }
    }
}
