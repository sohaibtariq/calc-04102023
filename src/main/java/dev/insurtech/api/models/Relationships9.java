/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Relationships9 type.
 */
public class Relationships9 {
    private Coverages2 coverages;
    private Customer2 customer;
    private InsuredRisk2 insuredRisk;
    private Product6 product;

    /**
     * Default constructor.
     */
    public Relationships9() {
    }

    /**
     * Initialization constructor.
     * @param  customer  Customer2 value for customer.
     * @param  product  Product6 value for product.
     * @param  coverages  Coverages2 value for coverages.
     * @param  insuredRisk  InsuredRisk2 value for insuredRisk.
     */
    public Relationships9(
            Customer2 customer,
            Product6 product,
            Coverages2 coverages,
            InsuredRisk2 insuredRisk) {
        this.coverages = coverages;
        this.customer = customer;
        this.insuredRisk = insuredRisk;
        this.product = product;
    }

    /**
     * Getter for Coverages.
     * List of coverages that will be created at the same time as this resource.
     * @return Returns the Coverages2
     */
    @JsonGetter("coverages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Coverages2 getCoverages() {
        return coverages;
    }

    /**
     * Setter for Coverages.
     * List of coverages that will be created at the same time as this resource.
     * @param coverages Value for Coverages2
     */
    @JsonSetter("coverages")
    public void setCoverages(Coverages2 coverages) {
        this.coverages = coverages;
    }

    /**
     * Getter for Customer.
     * Customer that will be created at the same time as this resource.
     * @return Returns the Customer2
     */
    @JsonGetter("customer")
    public Customer2 getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * Customer that will be created at the same time as this resource.
     * @param customer Value for Customer2
     */
    @JsonSetter("customer")
    public void setCustomer(Customer2 customer) {
        this.customer = customer;
    }

    /**
     * Getter for InsuredRisk.
     * Insured risk that will be created at the same time as this resource.
     * @return Returns the InsuredRisk2
     */
    @JsonGetter("insured_risk")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InsuredRisk2 getInsuredRisk() {
        return insuredRisk;
    }

    /**
     * Setter for InsuredRisk.
     * Insured risk that will be created at the same time as this resource.
     * @param insuredRisk Value for InsuredRisk2
     */
    @JsonSetter("insured_risk")
    public void setInsuredRisk(InsuredRisk2 insuredRisk) {
        this.insuredRisk = insuredRisk;
    }

    /**
     * Getter for Product.
     * Boost supplied value representing the specific product type. The product's configuration will
     * determine allowable values for the Policy, such as limit and deductible.
     * @return Returns the Product6
     */
    @JsonGetter("product")
    public Product6 getProduct() {
        return product;
    }

    /**
     * Setter for Product.
     * Boost supplied value representing the specific product type. The product's configuration will
     * determine allowable values for the Policy, such as limit and deductible.
     * @param product Value for Product6
     */
    @JsonSetter("product")
    public void setProduct(Product6 product) {
        this.product = product;
    }

    /**
     * Converts this Relationships9 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Relationships9 [" + "customer=" + customer + ", product=" + product + ", coverages="
                + coverages + ", insuredRisk=" + insuredRisk + "]";
    }

    /**
     * Builds a new {@link Relationships9.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Relationships9.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(customer, product)
                .coverages(getCoverages())
                .insuredRisk(getInsuredRisk());
        return builder;
    }

    /**
     * Class to build instances of {@link Relationships9}.
     */
    public static class Builder {
        private Customer2 customer;
        private Product6 product;
        private Coverages2 coverages;
        private InsuredRisk2 insuredRisk;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  customer  Customer2 value for customer.
         * @param  product  Product6 value for product.
         */
        public Builder(Customer2 customer, Product6 product) {
            this.customer = customer;
            this.product = product;
        }

        /**
         * Setter for customer.
         * @param  customer  Customer2 value for customer.
         * @return Builder
         */
        public Builder customer(Customer2 customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for product.
         * @param  product  Product6 value for product.
         * @return Builder
         */
        public Builder product(Product6 product) {
            this.product = product;
            return this;
        }

        /**
         * Setter for coverages.
         * @param  coverages  Coverages2 value for coverages.
         * @return Builder
         */
        public Builder coverages(Coverages2 coverages) {
            this.coverages = coverages;
            return this;
        }

        /**
         * Setter for insuredRisk.
         * @param  insuredRisk  InsuredRisk2 value for insuredRisk.
         * @return Builder
         */
        public Builder insuredRisk(InsuredRisk2 insuredRisk) {
            this.insuredRisk = insuredRisk;
            return this;
        }

        /**
         * Builds a new {@link Relationships9} object using the set fields.
         * @return {@link Relationships9}
         */
        public Relationships9 build() {
            return new Relationships9(customer, product, coverages, insuredRisk);
        }
    }
}
