/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Included3 type.
 */
public class Included3 {
    private String type;
    private String lid;
    private Attributes10 attributes;
    private Relationships10 relationships;

    /**
     * Default constructor.
     */
    public Included3() {
        type = "coverage";
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  lid  String value for lid.
     * @param  attributes  Attributes10 value for attributes.
     * @param  relationships  Relationships10 value for relationships.
     */
    public Included3(
            String type,
            String lid,
            Attributes10 attributes,
            Relationships10 relationships) {
        this.type = type;
        this.lid = lid;
        this.attributes = attributes;
        this.relationships = relationships;
    }

    /**
     * Getter for Type.
     * The type of resource being represented.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The type of resource being represented.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Lid.
     * The local ID that ties this resource to a related object in `data.relationships`.
     * @return Returns the String
     */
    @JsonGetter("lid")
    public String getLid() {
        return lid;
    }

    /**
     * Setter for Lid.
     * The local ID that ties this resource to a related object in `data.relationships`.
     * @param lid Value for String
     */
    @JsonSetter("lid")
    public void setLid(String lid) {
        this.lid = lid;
    }

    /**
     * Getter for Attributes.
     * Attributes for this object.
     * @return Returns the Attributes10
     */
    @JsonGetter("attributes")
    public Attributes10 getAttributes() {
        return attributes;
    }

    /**
     * Setter for Attributes.
     * Attributes for this object.
     * @param attributes Value for Attributes10
     */
    @JsonSetter("attributes")
    public void setAttributes(Attributes10 attributes) {
        this.attributes = attributes;
    }

    /**
     * Getter for Relationships.
     * Related items.
     * @return Returns the Relationships10
     */
    @JsonGetter("relationships")
    public Relationships10 getRelationships() {
        return relationships;
    }

    /**
     * Setter for Relationships.
     * Related items.
     * @param relationships Value for Relationships10
     */
    @JsonSetter("relationships")
    public void setRelationships(Relationships10 relationships) {
        this.relationships = relationships;
    }

    /**
     * Converts this Included3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Included3 [" + "type=" + type + ", lid=" + lid + ", attributes=" + attributes
                + ", relationships=" + relationships + "]";
    }

    /**
     * Builds a new {@link Included3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Included3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type, lid, attributes, relationships);
        return builder;
    }

    /**
     * Class to build instances of {@link Included3}.
     */
    public static class Builder {
        private String type = "coverage";
        private String lid;
        private Attributes10 attributes;
        private Relationships10 relationships;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         * @param  lid  String value for lid.
         * @param  attributes  Attributes10 value for attributes.
         * @param  relationships  Relationships10 value for relationships.
         */
        public Builder(String type, String lid, Attributes10 attributes,
                Relationships10 relationships) {
            this.type = type;
            this.lid = lid;
            this.attributes = attributes;
            this.relationships = relationships;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for lid.
         * @param  lid  String value for lid.
         * @return Builder
         */
        public Builder lid(String lid) {
            this.lid = lid;
            return this;
        }

        /**
         * Setter for attributes.
         * @param  attributes  Attributes10 value for attributes.
         * @return Builder
         */
        public Builder attributes(Attributes10 attributes) {
            this.attributes = attributes;
            return this;
        }

        /**
         * Setter for relationships.
         * @param  relationships  Relationships10 value for relationships.
         * @return Builder
         */
        public Builder relationships(Relationships10 relationships) {
            this.relationships = relationships;
            return this;
        }

        /**
         * Builds a new {@link Included3} object using the set fields.
         * @return {@link Included3}
         */
        public Included3 build() {
            return new Included3(type, lid, attributes, relationships);
        }
    }
}
