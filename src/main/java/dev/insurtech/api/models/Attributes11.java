/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Attributes11 type.
 */
public class Attributes11 {
    private String externalReference;
    private EntityTypeEnum entityType;
    private String businessName;
    private String firstName;
    private String lastName;
    private String email;
    private String phone;
    private String website;
    private MailingAddress mailingAddress;
    private BillingAddress billingAddress;

    /**
     * Default constructor.
     */
    public Attributes11() {
    }

    /**
     * Initialization constructor.
     * @param  entityType  EntityTypeEnum value for entityType.
     * @param  firstName  String value for firstName.
     * @param  lastName  String value for lastName.
     * @param  email  String value for email.
     * @param  phone  String value for phone.
     * @param  mailingAddress  MailingAddress value for mailingAddress.
     * @param  externalReference  String value for externalReference.
     * @param  businessName  String value for businessName.
     * @param  website  String value for website.
     * @param  billingAddress  BillingAddress value for billingAddress.
     */
    public Attributes11(
            EntityTypeEnum entityType,
            String firstName,
            String lastName,
            String email,
            String phone,
            MailingAddress mailingAddress,
            String externalReference,
            String businessName,
            String website,
            BillingAddress billingAddress) {
        this.externalReference = externalReference;
        this.entityType = entityType;
        this.businessName = businessName;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phone = phone;
        this.website = website;
        this.mailingAddress = mailingAddress;
        this.billingAddress = billingAddress;
    }

    /**
     * Getter for ExternalReference.
     * A reference that can be used to identify this customer in your system.
     * @return Returns the String
     */
    @JsonGetter("external_reference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getExternalReference() {
        return externalReference;
    }

    /**
     * Setter for ExternalReference.
     * A reference that can be used to identify this customer in your system.
     * @param externalReference Value for String
     */
    @JsonSetter("external_reference")
    public void setExternalReference(String externalReference) {
        this.externalReference = externalReference;
    }

    /**
     * Getter for EntityType.
     * The kind of customer this is.
     * @return Returns the EntityTypeEnum
     */
    @JsonGetter("entity_type")
    public EntityTypeEnum getEntityType() {
        return entityType;
    }

    /**
     * Setter for EntityType.
     * The kind of customer this is.
     * @param entityType Value for EntityTypeEnum
     */
    @JsonSetter("entity_type")
    public void setEntityType(EntityTypeEnum entityType) {
        this.entityType = entityType;
    }

    /**
     * Getter for BusinessName.
     * The legal name of the business.
     * @return Returns the String
     */
    @JsonGetter("business_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBusinessName() {
        return businessName;
    }

    /**
     * Setter for BusinessName.
     * The legal name of the business.
     * @param businessName Value for String
     */
    @JsonSetter("business_name")
    public void setBusinessName(String businessName) {
        this.businessName = businessName;
    }

    /**
     * Getter for FirstName.
     * The first name of the contact.
     * @return Returns the String
     */
    @JsonGetter("first_name")
    public String getFirstName() {
        return firstName;
    }

    /**
     * Setter for FirstName.
     * The first name of the contact.
     * @param firstName Value for String
     */
    @JsonSetter("first_name")
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for LastName.
     * The last name of the contact.
     * @return Returns the String
     */
    @JsonGetter("last_name")
    public String getLastName() {
        return lastName;
    }

    /**
     * Setter for LastName.
     * The last name of the contact.
     * @param lastName Value for String
     */
    @JsonSetter("last_name")
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for Email.
     * The email address of the contact.
     * @return Returns the String
     */
    @JsonGetter("email")
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * The email address of the contact.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Phone.
     * The primary phone number of the contact.
     * @return Returns the String
     */
    @JsonGetter("phone")
    public String getPhone() {
        return phone;
    }

    /**
     * Setter for Phone.
     * The primary phone number of the contact.
     * @param phone Value for String
     */
    @JsonSetter("phone")
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * Getter for Website.
     * The website of the contact.
     * @return Returns the String
     */
    @JsonGetter("website")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWebsite() {
        return website;
    }

    /**
     * Setter for Website.
     * The website of the contact.
     * @param website Value for String
     */
    @JsonSetter("website")
    public void setWebsite(String website) {
        this.website = website;
    }

    /**
     * Getter for MailingAddress.
     * The mailing address of this customer.
     * @return Returns the MailingAddress
     */
    @JsonGetter("mailing_address")
    public MailingAddress getMailingAddress() {
        return mailingAddress;
    }

    /**
     * Setter for MailingAddress.
     * The mailing address of this customer.
     * @param mailingAddress Value for MailingAddress
     */
    @JsonSetter("mailing_address")
    public void setMailingAddress(MailingAddress mailingAddress) {
        this.mailingAddress = mailingAddress;
    }

    /**
     * Getter for BillingAddress.
     * The billing address of this customer.
     * @return Returns the BillingAddress
     */
    @JsonGetter("billing_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BillingAddress getBillingAddress() {
        return billingAddress;
    }

    /**
     * Setter for BillingAddress.
     * The billing address of this customer.
     * @param billingAddress Value for BillingAddress
     */
    @JsonSetter("billing_address")
    public void setBillingAddress(BillingAddress billingAddress) {
        this.billingAddress = billingAddress;
    }

    /**
     * Converts this Attributes11 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Attributes11 [" + "entityType=" + entityType + ", firstName=" + firstName
                + ", lastName=" + lastName + ", email=" + email + ", phone=" + phone
                + ", mailingAddress=" + mailingAddress + ", externalReference=" + externalReference
                + ", businessName=" + businessName + ", website=" + website + ", billingAddress="
                + billingAddress + "]";
    }

    /**
     * Builds a new {@link Attributes11.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Attributes11.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(entityType, firstName, lastName, email, phone, mailingAddress)
                .externalReference(getExternalReference())
                .businessName(getBusinessName())
                .website(getWebsite())
                .billingAddress(getBillingAddress());
        return builder;
    }

    /**
     * Class to build instances of {@link Attributes11}.
     */
    public static class Builder {
        private EntityTypeEnum entityType;
        private String firstName;
        private String lastName;
        private String email;
        private String phone;
        private MailingAddress mailingAddress;
        private String externalReference;
        private String businessName;
        private String website;
        private BillingAddress billingAddress;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  entityType  EntityTypeEnum value for entityType.
         * @param  firstName  String value for firstName.
         * @param  lastName  String value for lastName.
         * @param  email  String value for email.
         * @param  phone  String value for phone.
         * @param  mailingAddress  MailingAddress value for mailingAddress.
         */
        public Builder(EntityTypeEnum entityType, String firstName, String lastName, String email,
                String phone, MailingAddress mailingAddress) {
            this.entityType = entityType;
            this.firstName = firstName;
            this.lastName = lastName;
            this.email = email;
            this.phone = phone;
            this.mailingAddress = mailingAddress;
        }

        /**
         * Setter for entityType.
         * @param  entityType  EntityTypeEnum value for entityType.
         * @return Builder
         */
        public Builder entityType(EntityTypeEnum entityType) {
            this.entityType = entityType;
            return this;
        }

        /**
         * Setter for firstName.
         * @param  firstName  String value for firstName.
         * @return Builder
         */
        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Setter for lastName.
         * @param  lastName  String value for lastName.
         * @return Builder
         */
        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for phone.
         * @param  phone  String value for phone.
         * @return Builder
         */
        public Builder phone(String phone) {
            this.phone = phone;
            return this;
        }

        /**
         * Setter for mailingAddress.
         * @param  mailingAddress  MailingAddress value for mailingAddress.
         * @return Builder
         */
        public Builder mailingAddress(MailingAddress mailingAddress) {
            this.mailingAddress = mailingAddress;
            return this;
        }

        /**
         * Setter for externalReference.
         * @param  externalReference  String value for externalReference.
         * @return Builder
         */
        public Builder externalReference(String externalReference) {
            this.externalReference = externalReference;
            return this;
        }

        /**
         * Setter for businessName.
         * @param  businessName  String value for businessName.
         * @return Builder
         */
        public Builder businessName(String businessName) {
            this.businessName = businessName;
            return this;
        }

        /**
         * Setter for website.
         * @param  website  String value for website.
         * @return Builder
         */
        public Builder website(String website) {
            this.website = website;
            return this;
        }

        /**
         * Setter for billingAddress.
         * @param  billingAddress  BillingAddress value for billingAddress.
         * @return Builder
         */
        public Builder billingAddress(BillingAddress billingAddress) {
            this.billingAddress = billingAddress;
            return this;
        }

        /**
         * Builds a new {@link Attributes11} object using the set fields.
         * @return {@link Attributes11}
         */
        public Attributes11 build() {
            return new Attributes11(entityType, firstName, lastName, email, phone, mailingAddress,
                    externalReference, businessName, website, billingAddress);
        }
    }
}
