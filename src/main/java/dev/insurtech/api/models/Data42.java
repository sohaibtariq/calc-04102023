/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Data42 type.
 */
public class Data42 {
    private String type;
    private String lid;

    /**
     * Default constructor.
     */
    public Data42() {
        type = "insured_risk";
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  lid  String value for lid.
     */
    public Data42(
            String type,
            String lid) {
        this.type = type;
        this.lid = lid;
    }

    /**
     * Getter for Type.
     * The type of resource being represented.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The type of resource being represented.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Lid.
     * The local ID that ties this resource to a related object in `data.included`.
     * @return Returns the String
     */
    @JsonGetter("lid")
    public String getLid() {
        return lid;
    }

    /**
     * Setter for Lid.
     * The local ID that ties this resource to a related object in `data.included`.
     * @param lid Value for String
     */
    @JsonSetter("lid")
    public void setLid(String lid) {
        this.lid = lid;
    }

    /**
     * Converts this Data42 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Data42 [" + "type=" + type + ", lid=" + lid + "]";
    }

    /**
     * Builds a new {@link Data42.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Data42.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type, lid);
        return builder;
    }

    /**
     * Class to build instances of {@link Data42}.
     */
    public static class Builder {
        private String type = "insured_risk";
        private String lid;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         * @param  lid  String value for lid.
         */
        public Builder(String type, String lid) {
            this.type = type;
            this.lid = lid;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for lid.
         * @param  lid  String value for lid.
         * @return Builder
         */
        public Builder lid(String lid) {
            this.lid = lid;
            return this;
        }

        /**
         * Builds a new {@link Data42} object using the set fields.
         * @return {@link Data42}
         */
        public Data42 build() {
            return new Data42(type, lid);
        }
    }
}
