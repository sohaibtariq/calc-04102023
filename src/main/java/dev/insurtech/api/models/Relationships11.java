/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Relationships11 type.
 */
public class Relationships11 {
    private Coverages3 coverages;
    private Customer3 customer;
    private InsuredRisk3 insuredRisk;
    private Product6 product;
    private Agent6 agent;

    /**
     * Default constructor.
     */
    public Relationships11() {
    }

    /**
     * Initialization constructor.
     * @param  customer  Customer3 value for customer.
     * @param  insuredRisk  InsuredRisk3 value for insuredRisk.
     * @param  product  Product6 value for product.
     * @param  coverages  Coverages3 value for coverages.
     * @param  agent  Agent6 value for agent.
     */
    public Relationships11(
            Customer3 customer,
            InsuredRisk3 insuredRisk,
            Product6 product,
            Coverages3 coverages,
            Agent6 agent) {
        this.coverages = coverages;
        this.customer = customer;
        this.insuredRisk = insuredRisk;
        this.product = product;
        this.agent = agent;
    }

    /**
     * Getter for Coverages.
     * List of coverages that were created.
     * @return Returns the Coverages3
     */
    @JsonGetter("coverages")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Coverages3 getCoverages() {
        return coverages;
    }

    /**
     * Setter for Coverages.
     * List of coverages that were created.
     * @param coverages Value for Coverages3
     */
    @JsonSetter("coverages")
    public void setCoverages(Coverages3 coverages) {
        this.coverages = coverages;
    }

    /**
     * Getter for Customer.
     * Customer that was created.
     * @return Returns the Customer3
     */
    @JsonGetter("customer")
    public Customer3 getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * Customer that was created.
     * @param customer Value for Customer3
     */
    @JsonSetter("customer")
    public void setCustomer(Customer3 customer) {
        this.customer = customer;
    }

    /**
     * Getter for InsuredRisk.
     * Insured risk attached to the quote.
     * @return Returns the InsuredRisk3
     */
    @JsonGetter("insured_risk")
    public InsuredRisk3 getInsuredRisk() {
        return insuredRisk;
    }

    /**
     * Setter for InsuredRisk.
     * Insured risk attached to the quote.
     * @param insuredRisk Value for InsuredRisk3
     */
    @JsonSetter("insured_risk")
    public void setInsuredRisk(InsuredRisk3 insuredRisk) {
        this.insuredRisk = insuredRisk;
    }

    /**
     * Getter for Product.
     * Boost supplied value representing the specific product type. The product's configuration will
     * determine allowable values for the Policy, such as limit and deductible.
     * @return Returns the Product6
     */
    @JsonGetter("product")
    public Product6 getProduct() {
        return product;
    }

    /**
     * Setter for Product.
     * Boost supplied value representing the specific product type. The product's configuration will
     * determine allowable values for the Policy, such as limit and deductible.
     * @param product Value for Product6
     */
    @JsonSetter("product")
    public void setProduct(Product6 product) {
        this.product = product;
    }

    /**
     * Getter for Agent.
     * The Boost UUID of the agent.
     * @return Returns the Agent6
     */
    @JsonGetter("agent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Agent6 getAgent() {
        return agent;
    }

    /**
     * Setter for Agent.
     * The Boost UUID of the agent.
     * @param agent Value for Agent6
     */
    @JsonSetter("agent")
    public void setAgent(Agent6 agent) {
        this.agent = agent;
    }

    /**
     * Converts this Relationships11 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Relationships11 [" + "customer=" + customer + ", insuredRisk=" + insuredRisk
                + ", product=" + product + ", coverages=" + coverages + ", agent=" + agent + "]";
    }

    /**
     * Builds a new {@link Relationships11.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Relationships11.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(customer, insuredRisk, product)
                .coverages(getCoverages())
                .agent(getAgent());
        return builder;
    }

    /**
     * Class to build instances of {@link Relationships11}.
     */
    public static class Builder {
        private Customer3 customer;
        private InsuredRisk3 insuredRisk;
        private Product6 product;
        private Coverages3 coverages;
        private Agent6 agent;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  customer  Customer3 value for customer.
         * @param  insuredRisk  InsuredRisk3 value for insuredRisk.
         * @param  product  Product6 value for product.
         */
        public Builder(Customer3 customer, InsuredRisk3 insuredRisk, Product6 product) {
            this.customer = customer;
            this.insuredRisk = insuredRisk;
            this.product = product;
        }

        /**
         * Setter for customer.
         * @param  customer  Customer3 value for customer.
         * @return Builder
         */
        public Builder customer(Customer3 customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for insuredRisk.
         * @param  insuredRisk  InsuredRisk3 value for insuredRisk.
         * @return Builder
         */
        public Builder insuredRisk(InsuredRisk3 insuredRisk) {
            this.insuredRisk = insuredRisk;
            return this;
        }

        /**
         * Setter for product.
         * @param  product  Product6 value for product.
         * @return Builder
         */
        public Builder product(Product6 product) {
            this.product = product;
            return this;
        }

        /**
         * Setter for coverages.
         * @param  coverages  Coverages3 value for coverages.
         * @return Builder
         */
        public Builder coverages(Coverages3 coverages) {
            this.coverages = coverages;
            return this;
        }

        /**
         * Setter for agent.
         * @param  agent  Agent6 value for agent.
         * @return Builder
         */
        public Builder agent(Agent6 agent) {
            this.agent = agent;
            return this;
        }

        /**
         * Builds a new {@link Relationships11} object using the set fields.
         * @return {@link Relationships11}
         */
        public Relationships11 build() {
            return new Relationships11(customer, insuredRisk, product, coverages, agent);
        }
    }
}
