/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Relationships2 type.
 */
public class Relationships2 {
    private AdditionalInterests additionalInterests;
    private Parent parent;

    /**
     * Default constructor.
     */
    public Relationships2() {
    }

    /**
     * Initialization constructor.
     * @param  additionalInterests  AdditionalInterests value for additionalInterests.
     * @param  parent  Parent value for parent.
     */
    public Relationships2(
            AdditionalInterests additionalInterests,
            Parent parent) {
        this.additionalInterests = additionalInterests;
        this.parent = parent;
    }

    /**
     * Getter for AdditionalInterests.
     * List of additional interests for this policy.
     * @return Returns the AdditionalInterests
     */
    @JsonGetter("additional_interests")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AdditionalInterests getAdditionalInterests() {
        return additionalInterests;
    }

    /**
     * Setter for AdditionalInterests.
     * List of additional interests for this policy.
     * @param additionalInterests Value for AdditionalInterests
     */
    @JsonSetter("additional_interests")
    public void setAdditionalInterests(AdditionalInterests additionalInterests) {
        this.additionalInterests = additionalInterests;
    }

    /**
     * Getter for Parent.
     * ID of parent policy. Product must also be a parent product.
     * @return Returns the Parent
     */
    @JsonGetter("parent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Parent getParent() {
        return parent;
    }

    /**
     * Setter for Parent.
     * ID of parent policy. Product must also be a parent product.
     * @param parent Value for Parent
     */
    @JsonSetter("parent")
    public void setParent(Parent parent) {
        this.parent = parent;
    }

    /**
     * Converts this Relationships2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Relationships2 [" + "additionalInterests=" + additionalInterests + ", parent="
                + parent + "]";
    }

    /**
     * Builds a new {@link Relationships2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Relationships2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .additionalInterests(getAdditionalInterests())
                .parent(getParent());
        return builder;
    }

    /**
     * Class to build instances of {@link Relationships2}.
     */
    public static class Builder {
        private AdditionalInterests additionalInterests;
        private Parent parent;



        /**
         * Setter for additionalInterests.
         * @param  additionalInterests  AdditionalInterests value for additionalInterests.
         * @return Builder
         */
        public Builder additionalInterests(AdditionalInterests additionalInterests) {
            this.additionalInterests = additionalInterests;
            return this;
        }

        /**
         * Setter for parent.
         * @param  parent  Parent value for parent.
         * @return Builder
         */
        public Builder parent(Parent parent) {
            this.parent = parent;
            return this;
        }

        /**
         * Builds a new {@link Relationships2} object using the set fields.
         * @return {@link Relationships2}
         */
        public Relationships2 build() {
            return new Relationships2(additionalInterests, parent);
        }
    }
}
