/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Relationships5 type.
 */
public class Relationships5 {
    private Product3 product;
    private Agent3 agent;

    /**
     * Default constructor.
     */
    public Relationships5() {
    }

    /**
     * Initialization constructor.
     * @param  product  Product3 value for product.
     * @param  agent  Agent3 value for agent.
     */
    public Relationships5(
            Product3 product,
            Agent3 agent) {
        this.product = product;
        this.agent = agent;
    }

    /**
     * Getter for Product.
     * UUID that identifies this product.
     * @return Returns the Product3
     */
    @JsonGetter("product")
    public Product3 getProduct() {
        return product;
    }

    /**
     * Setter for Product.
     * UUID that identifies this product.
     * @param product Value for Product3
     */
    @JsonSetter("product")
    public void setProduct(Product3 product) {
        this.product = product;
    }

    /**
     * Getter for Agent.
     * UUID that identifies this agent.
     * @return Returns the Agent3
     */
    @JsonGetter("agent")
    public Agent3 getAgent() {
        return agent;
    }

    /**
     * Setter for Agent.
     * UUID that identifies this agent.
     * @param agent Value for Agent3
     */
    @JsonSetter("agent")
    public void setAgent(Agent3 agent) {
        this.agent = agent;
    }

    /**
     * Converts this Relationships5 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Relationships5 [" + "product=" + product + ", agent=" + agent + "]";
    }

    /**
     * Builds a new {@link Relationships5.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Relationships5.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(product, agent);
        return builder;
    }

    /**
     * Class to build instances of {@link Relationships5}.
     */
    public static class Builder {
        private Product3 product;
        private Agent3 agent;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  product  Product3 value for product.
         * @param  agent  Agent3 value for agent.
         */
        public Builder(Product3 product, Agent3 agent) {
            this.product = product;
            this.agent = agent;
        }

        /**
         * Setter for product.
         * @param  product  Product3 value for product.
         * @return Builder
         */
        public Builder product(Product3 product) {
            this.product = product;
            return this;
        }

        /**
         * Setter for agent.
         * @param  agent  Agent3 value for agent.
         * @return Builder
         */
        public Builder agent(Agent3 agent) {
            this.agent = agent;
            return this;
        }

        /**
         * Builds a new {@link Relationships5} object using the set fields.
         * @return {@link Relationships5}
         */
        public Relationships5 build() {
            return new Relationships5(product, agent);
        }
    }
}
