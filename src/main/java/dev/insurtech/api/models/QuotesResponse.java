/*
 * MergedApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package dev.insurtech.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for QuotesResponse type.
 */
public class QuotesResponse {
    private Data45 data;
    private List<Object> included;

    /**
     * Default constructor.
     */
    public QuotesResponse() {
    }

    /**
     * Initialization constructor.
     * @param  data  Data45 value for data.
     * @param  included  List of Object value for included.
     */
    public QuotesResponse(
            Data45 data,
            List<Object> included) {
        this.data = data;
        this.included = included;
    }

    /**
     * Getter for Data.
     * All values for this quote are in this top-level object.
     * @return Returns the Data45
     */
    @JsonGetter("data")
    public Data45 getData() {
        return data;
    }

    /**
     * Setter for Data.
     * All values for this quote are in this top-level object.
     * @param data Value for Data45
     */
    @JsonSetter("data")
    public void setData(Data45 data) {
        this.data = data;
    }

    /**
     * Getter for Included.
     * Array of included objects.
     * @return Returns the List of Object
     */
    @JsonGetter("included")
    public List<Object> getIncluded() {
        return included;
    }

    /**
     * Setter for Included.
     * Array of included objects.
     * @param included Value for List of Object
     */
    @JsonSetter("included")
    public void setIncluded(List<Object> included) {
        this.included = included;
    }

    /**
     * Converts this QuotesResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "QuotesResponse [" + "data=" + data + ", included=" + included + "]";
    }

    /**
     * Builds a new {@link QuotesResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link QuotesResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(data, included);
        return builder;
    }

    /**
     * Class to build instances of {@link QuotesResponse}.
     */
    public static class Builder {
        private Data45 data;
        private List<Object> included;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  data  Data45 value for data.
         * @param  included  List of Object value for included.
         */
        public Builder(Data45 data, List<Object> included) {
            this.data = data;
            this.included = included;
        }

        /**
         * Setter for data.
         * @param  data  Data45 value for data.
         * @return Builder
         */
        public Builder data(Data45 data) {
            this.data = data;
            return this;
        }

        /**
         * Setter for included.
         * @param  included  List of Object value for included.
         * @return Builder
         */
        public Builder included(List<Object> included) {
            this.included = included;
            return this;
        }

        /**
         * Builds a new {@link QuotesResponse} object using the set fields.
         * @return {@link QuotesResponse}
         */
        public QuotesResponse build() {
            return new QuotesResponse(data, included);
        }
    }
}
